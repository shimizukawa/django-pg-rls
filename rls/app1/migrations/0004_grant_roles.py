# Generated by Django 3.2 on 2021-04-22 17:45

from django.db import migrations
from django.conf import settings


def get_create_policy_sql():
    """CREATE POLICY用SQL"""
    sql = "\n".join([
        '\n'.join([
            f"ALTER TABLE {tbl_name} ENABLE ROW LEVEL SECURITY;",
            f"CREATE POLICY {settings.RLS_ROLE_NAME}_{tbl_name} ON {tbl_name} USING(tenant_id::text = current_user);",
        ])
        for tbl_name in settings.RLS_SECURE_TABLE_NAMES
    ])
    return sql


def get_drop_policy_sql():
    """DROP POLICY用SQL"""
    sql = "\n".join([
        '\n'.join([
            f"DROP POLICY {settings.RLS_ROLE_NAME}_{tbl_name} ON {tbl_name};",
            f"ALTER TABLE {tbl_name} DISABLE ROW LEVEL SECURITY;",
        ])
        for tbl_name in settings.RLS_SECURE_TABLE_NAMES
    ])
    return sql

class Migration(migrations.Migration):

    dependencies = [
        ('app1', '0003_datamigration'),
    ]

    operations = [
        # 所属テナントのデータのみを見せたい場合、各テーブルにRLSを設定
        migrations.RunSQL(get_create_policy_sql(), reverse_sql=get_drop_policy_sql()),
        # FIXME: tenant_idをもつテーブル作成時に自動的に適用したい
    ]
