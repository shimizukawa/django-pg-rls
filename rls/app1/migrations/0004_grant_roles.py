# Generated by Django 3.2 on 2021-04-22 17:45
"""
所属テナントのデータのみを見せたい全てのテーブルに対して、RLSを有効化し、ポリシーを設定する。
このマイグレーションは、RLS設定対象テーブルを追加するたびに実行する必要がある。
"""

from django.db import migrations
from django.conf import settings


def get_rls_setup_sql(table_names):
    """RLSの有効化とRLSポリシー適用SQL"""
    sql = "\n".join([
        '\n'.join([
            f"ALTER TABLE {tbl_name} ENABLE ROW LEVEL SECURITY;",
            f"CREATE POLICY {settings.RLS_ROLE_NAME}_{tbl_name} ON {tbl_name} USING(tenant_id::text = current_user);",
        ])
        for tbl_name in table_names
    ])
    return sql


def get_rls_teardown_sql(table_names):
    """RLSの無効化とRLSポリシー削除SQL"""
    sql = "\n".join([
        '\n'.join([
            f"DROP POLICY {settings.RLS_ROLE_NAME}_{tbl_name} ON {tbl_name};",
            f"ALTER TABLE {tbl_name} DISABLE ROW LEVEL SECURITY;",
        ])
        for tbl_name in table_names
    ])
    return sql

class Migration(migrations.Migration):

    dependencies = [
        ('app1', '0003_grant_all'),
    ]

    operations = [
        # FIXME: tenant_idをもつテーブル作成時に自動的に適用したい
        migrations.RunSQL(get_rls_setup_sql(settings.RLS_SECURE_TABLE_NAMES),
                          reverse_sql=get_rls_teardown_sql(settings.RLS_SECURE_TABLE_NAMES)),
    ]
